package com.mvc.jigulyeog.controller;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.google.gson.JsonObject;

@Controller
public class CkeditorFileUploadController {
	private static final Logger logger = LoggerFactory.getLogger(CkeditorFileUploadController.class);
	
	@RequestMapping(value="/fileupload.do",method=RequestMethod.POST)
	public String fileUpload(HttpServletRequest req,HttpServletResponse res,@RequestParam MultipartFile upload) throws IOException {
		JsonObject json = new JsonObject();
		PrintWriter pw = null;
		OutputStream out = null;
		
		MultipartFile file = upload;
		if(file != null) {
			if(file.getSize() > 0 && StringUtils.isNoneBlank(file.getName())) {
				// file의 type이 image라면
				if(file.getContentType().toLowerCase().startsWith("image/")) {
					try {
						String fileName = file.getName();
						byte[] bytes = file.getBytes();

						String uploadPath = req.getSession().getServletContext().getRealPath("/resources/upload/project"); // 업로드 경로
						logger.info("[uploadPath :"+uploadPath+"]");
						
						File uploadFile = new File(uploadPath);
						
						// 경로 존재 여부
						if(!uploadFile.exists()) {
							uploadFile.mkdirs();
						}
						
						fileName = UUID.randomUUID().toString(); // 랜덤글자
						uploadPath = uploadPath+"/"+fileName;
						
						File newfile = new File(uploadPath);
				
						out = new FileOutputStream(newfile);
						
						out.write(bytes);
						
						pw = res.getWriter();
						res.setContentType("text/html");
						String fileUrl = req.getContextPath()+"/resources/upload/"+fileName;
						logger.info("[fileUrl : "+fileUrl+"]");
						
						// json 데이터로 등록
						// {"uploaded":1,"fileName":"test.jpg","url":"/resources/upload/test.jpg"}
						// 이런 형태로 리턴이 나가면 된다.
						
						json.addProperty("uploaded", 1);
						json.addProperty("fileName", fileName);
						json.addProperty("url", fileUrl);
						
						pw.println(json);
						
						
						
					}catch (Exception e) {
						e.printStackTrace();
					}finally {
						if(out != null) {
							out.close();
						}
						if(pw != null) {
							pw.close();
						}
						
					}
				}
				
			}
		}
		
		
//		
//		 try{
//		        String fileName = upload.getOriginalFilename(); // file의 original name
//		        
//		        byte[] bytes = upload.getBytes();
//		        String uploadPath = "upload/project/" + fileName;//저장경로
//		 
//		        out = new FileOutputStream(new File(uploadPath));
//		        
//		        out.write(bytes);
//		        String callback = req.getParameter("CKEditorFuncNum");
//		 
//		        pw = res.getWriter();
//		        String fileUrl = "upload/project/" + fileName;//url경로
//		 
//		        pw.println("<script type='text/javascript'>window.parent.CKEDITOR.tools.callFunction("
//		                + callback
//		                + ",'"
//		                + fileUrl
//		                + "','이미지를 업로드 하였습니다.'"
//		                + ")</script>");
//		        pw.flush();
//		 
//		    }catch(IOException e){
//		        e.printStackTrace();
//		    } finally {
//		        try {
//		            if (out != null) {
//		                out.close();
//		            }
//		            if (pw != null) {
//		                pw.close();
//		            }
//		        } catch (IOException e) {
//		            e.printStackTrace();
//		        }
//		    }
		 
		
		return null;
	}
	
	
}
